<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>docker haskell on the crab &amp; musket</title><link>/tags/docker-haskell/</link><description>Recent content in docker haskell on the crab &amp; musket</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 10 Jul 2015 00:00:00 +0000</lastBuildDate><atom:link href="/tags/docker-haskell/index.xml" rel="self" type="application/rss+xml"/><item><title>Development versus deployment: Docker and Haskell</title><link>/blog/development-versus-deployment-docker-and-haskell/</link><pubDate>Fri, 10 Jul 2015 00:00:00 +0000</pubDate><guid>/blog/development-versus-deployment-docker-and-haskell/</guid><description>This post was prompted by a recent discussion about using Docker for Haskell development. The question was: how do I develop quickly using Docker, and avoid waiting for the container to be rebuilt all the time? My answer is that you should develop in one container, and deploy an entirely different container.
Now, this does sound odd, given that Docker was supposed to be the great equaliser between development and production environments.</description></item></channel></rss>